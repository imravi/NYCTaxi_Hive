-- assumptions:
-- 1] speed is calculated in terms of miles per hour i,e mph.
-- 2] it is possible to have same pickup and drop location as it may be round trip.
-- 3] trip distance cannot be zero,we are finding for only the actual trips made.
-- 4] passanger count cannot be zero,since we consider actual trips.
-- 5] fare amount and total amount cannot be zero if the trip is made.
-- 6] considering records for 2017 year of nov and dec month.


ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;


CREATE external TABLE if NOT EXISTS `nyc_taxi`
(
  `VendorID` int ,
  `tpep_pickup_datetime` string ,
  `tpep_dropoff_datetime` string ,
  `passenger_count` int ,
  `trip_distance` double ,
  `RatecodeID` int ,
  `store_and_fwd_flag` string ,
  `PULocationID` int ,
  `DOLocationID` int ,
  `payment_type` int ,
  `fare_amount` double ,
  `extra` double ,
  `mta_tax` double ,
  `tip_amount` double ,
  `tolls_amount` double ,
  `improvement_surcharge` double ,
  `total_amount` double )  ROW FORMAT   DELIMITED
    FIELDS TERMINATED BY ','
    COLLECTION ITEMS TERMINATED BY '\002'
    MAP KEYS TERMINATED BY '\003'
    location '/common_folder/nyc_taxi_data/'
    TBLPROPERTIES("skip.header.line.count"="1")
;

-- Basic data quality checks
-- 1 How many records has each TPEP provider provided? Write a query that summarises the number of records of each provider.
SELECT vendorid,count(*) as records from nyc_taxi GROUP BY vendorid;
-- vendor 2 has provided 647183 records
-- vendor 1 has provided 527386 records

-- 2 Data Quality Issues

select distinct(month(to_date(tpep_pickup_datetime))) from nyc_taxi;

-- pickup_month
-- 10
-- 12
-- 1
-- 11
-- As per the data dictionary the value can be 11 or 12 only.

select distinct(month(to_date(tpep_dropoff_datetime))) from nyc_taxi;

-- drop_month
-- 4
-- 10
-- 12
-- 1
-- 11
-- As per the data dictionary the value can be 11 or 12 only.

select distinct(year(to_date(tpep_pickup_datetime))) as pick_year from nyc_taxi;

-- pick_year
-- 2008
-- 2018
-- 2003
-- 2009
-- 2017

-- As per data dictionary year can not be other than 2017

select distinct(year(to_date(tpep_dropoff_datetime))) as drop_year from nyc_taxi;

-- drop_year
-- 2008
-- 2018
-- 2003
-- 2009
-- 2017
-- 2019

-- As per data dictionary year can not be other than 2017

SELECT vendorid,count(*) as record_count from nyc_taxi where mta_tax!=0.5 and mta_tax!=0 GROUP BY vendorid;

-- vendorid	record_count
-- 1		1
-- 2		547
-- as per the data dictionary the value can be 0.5.

SELECT vendorid,count(*) as record_count from nyc_taxi where extra!=0.5 and extra!=1 and extra!=0 group by vendorid;

-- vendorid	record_count
-- 1		1823
-- 2		3033
-- As per the data dictionary the value can be 1 or 0.5

SELECT vendorid,count(*) as record_count from nyc_taxi where improvement_surcharge>0.3 group by vendorid;

-- vendorid	record_count
-- 2		4
-- vendor 2 has charged more than the specified regulation.

SELECT vendorid,count(*) as record_count from nyc_taxi where ratecodeid<1 or ratecodeid>6 group by vendorid;
 	
-- vendorid	record_count
-- 2		1
-- 1		8
-- record count can take value from 1-6 as per data dictionary but vendors have submitted for different ratecodeid which does not exist.


-- We need to remove these inconsitant records and prepare clean partioned table.


-- 3 Identifying vendor.

SELECT vendorid,count(*) as count_of_records from nyc_taxi where passenger_count=0 group by vendorid; 
 	
-- vendorid	count_of_records
-- 2			11
-- 1			6813
-- vendor 1 has submitted huge number of records where taxi is running without any passengers.

SELECT vendorid,count(*) as record_count from nyc_taxi where trip_distance=0 group by vendorid order by record_count desc;
-- vendorid		record_count
-- 1			4217
-- 2			3185

-- both vendors have given the data where trip distance is 0.Vendor 1 has reported more such records.



SELECT vendorid,count(*) as record_count from nyc_taxi where fare_amount=0 and trip_distance>0 group by vendorid order by record_count desc;

--  vendorid	record_count
--  1			156
--  2			11
-- their are some trips where the trip distance>0 but still the fare has come up as 0.Vendor 1 has reported more such records.



SELECT vendorid,count(*) as record_count from nyc_taxi where tolls_amount>0 and trip_distance=0 group by vendorid;

-- vendorid	record_count
-- 1		303
-- 2		340
-- distance of trip is 0 but still tolls amount>0 which is not possible.Both have reported almost same times.



SELECT vendorid,count(*) as record_count from nyc_taxi where total_amount=0 and trip_distance>0 group by vendorid;

-- vendorid	record_count
-- 2		11
-- 1		4
-- Total amount cannot be zero for a actual trip made.

-- From all the above points we can conclude that vendor 1 is doing bad job.

ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;
SET hive.exec.max.dynamic.partitions=100000;
SET hive.exec.max.dynamic.partitions.pernode=100000;

create external table if not exists `nyc_taxi_part`(
`VendorID` int ,
  `tpep_pickup_datetime` string ,
  `tpep_dropoff_datetime` string ,
  `passenger_count` int ,
  `trip_distance` double ,
  `RatecodeID` int ,
  `store_and_fwd_flag` string ,
  `PULocationID` int ,
  `DOLocationID` int ,
  `payment_type` int ,
  `fare_amount` double ,
  `extra` double ,
  `mta_tax` double ,
  `tip_amount` double ,
  `tolls_amount` double ,
  `improvement_surcharge` double ,
  `total_amount` double
) partitioned by (`mnt` int)
stored as orc location '/user/hive/warehouse/rb_080'
tblproperties ("orc.compress"="SNAPPY");

insert overwrite table nyc_taxi_part partition(mnt)
SELECT *,month(to_date(tpep_pickup_datetime)) as mnt from nyc_taxi where year(to_date(tpep_pickup_datetime))=2017 and year(to_date(tpep_dropoff_datetime))=2017 and
 month(to_date(tpep_pickup_datetime)) in (11,12) and mta_tax in (0,0.5) and extra in (0.5,1,0) and improvement_surcharge in (0,0.3) AND
 ratecodeid between 1 and 6 and trip_distance>0 and fare_amount!=0 and total_amount!=0 and passenger_count!=0;
 
 
-- Analysis I :

-- 1]Compare the overall average fare per trip for November and December.
-- Answer:
SELECT avg(fare_amount) as fare_pertrip11 from nyc_taxi_part where mnt=11;

-- fare_pertrip11
-- 12.91

SELECT avg(fare_amount) as fare_pertrip12 from nyc_taxi_part where mnt=12;
-- fare_pertrip
-- 12.70

-- Amount is less by 0.21 cents in december compared to november.

-- 2] Explore the ‘number of passengers per trip’ - how many trips are made by each level of ‘Passenger_count’? Do most people travel solo or with other people?
-- Answer:

-- For November Month

select passenger_count,count(*) as trips_made from nyc_taxi_part where mnt=11 group by passenger_count order by trips_made desc;

-- passenger_count	trips_made
-- 1				407665
-- 2				85129
-- 5				26878
-- 3				23853
-- 6				16167
-- 4				11281
-- 7				2
-- solo travellers are more

-- For december month.

select passenger_count,count(*) as trips_made from nyc_taxi_part where mnt=12 group by passenger_count order by trips_made desc;

-- passenger_count	trips_made
-- 1				410738
-- 2				89832
-- 5				27222
-- 3				26377
-- 6				16748
-- 4				13422
-- 7				1

-- solo travellers are more

-- OverAll

select passenger_count,count(*) as trips_made from nyc_taxi_part group by passenger_count order by trips_made desc;

-- passenger_count	trips_made
-- 1				818403
-- 2				174961
-- 5				54100
-- 3				50230
-- 6				32915
-- 4				24703
-- 7				3

-- Over all We can clearly see from above that most passenges travel solo.

-- 3]Which is the most preferred mode of payment?
-- Answer:

SELECT payment_type,count(*) as no_of_payments_made from nyc_taxi_part GROUP BY payment_type;

-- payment_type	no_of_payments_made
-- 1			779752
-- 2			369499
-- 3			4745
-- 4			1319
-- from above result we can see credit card is the maximum no of times used for payments.

-- 4]What is the average tip paid per trip? 
-- 	 Compare the average tip with the 25th, 50th and 75th percentiles and comment whether the ‘average tip’ is a representative statistic (of the central tendency) of ‘tip amount paid’. 
-- 	 Hint: You may use percentile_approx(DOUBLE col, p): Returns an approximate pth percentile of a numeric column (including floating point types) in the group.

-- Answer:

SELECT avg(tip_amount) as average_tip from nyc_taxi_part;

-- average_tip
-- 1.8268863470130907

-- average tip paid is 1.8$

SELECT percentile_approx(tip_amount,array(0.25,0.5,0.75)) as trip_amount_distribution from nyc_taxi_part;

-- trip_amount_distribution
-- [0.0 , 1.36 , 2.45 ]

-- we can see that 25th percentile is 0.0,50th percentile is 1.355 and 75th percentile is 2.45
-- We can clearly see that avg tip amount does not represent central tendency.

-- 5] Explore the ‘Extra’ (charge) variable - what fraction of total trips have an extra charge is levied?
-- Answer:

SELECT count(*) as rec_count from nyc_taxi_part where extra=0.5 or extra=1;

-- rec_count
-- 	532943

-- no of records on which extra is levied.

SELECT count(*) as tot_count from nyc_taxi_part;

-- tot_count
-- 1155315
-- total trip records.

-- fraction of levied trips= 532943/1155315 = 0.4613 or 46.13% of the total trips.

-- Analysis II

-- 1] What is the correlation between the number of passengers on any given trip, and the tip paid per trip? Do multiple travellers tip more compared to solo travellers? 
-- Answer :

SELECT corr(passenger_count,tip_amount) as corr_pertrip from nyc_taxi_part;

-- corr_pertrip
-- -0.00534429265907178
-- correlation is negative and the value is very close to 0,we can take it as 0 which indicates their is no correlation between count of passanges and tip paid.

SELECT  passenger_count,avg(tip_amount) as tip_paid from nyc_taxi_part where passenger_count!=0 GROUP BY passenger_count;

-- passenger_count	tip_paid
-- 1				1.836552920749048
-- 2				1.8285240710787283
-- 3				1.744208640254832
-- 4				1.6058794478403466
-- 5				1.8594016635859671
-- 6				1.8161148412577892
-- 7				5.2299999999999995
 
-- IF we see the above table if the count is more than 5 higher chances paying more tip,when 2-4 they pay less tip compared to solo travellers.
-- Over all if we take the average from 2-7 passengers we get around 2.35$ thus we can say yes multiple travellers tip more compared to solo.

-- 2] Segregate the data into five segments of ‘tip paid’: [0-5), [5-10), [10-15) , [15-20) and >=20.Calculate the percentage share of each bucket (i.e. the fraction of trips falling in each bucket).
-- Answer:

SELECT count(*) as total_trips from nyc_taxi_part;
-- total_trips
-- 1155315
-- total no if trips

SELECT round((count(*)/1155315)*100,2) as per_share from nyc_taxi_part where tip_amount>=0 and tip_amount<5;

-- per_share
-- 92.39

-- trips with tip within 5

SELECT round((count(*)/1155315)*100,2) as per_share from nyc_taxi_part where tip_amount>=5 and tip_amount<10;
-- per_share
-- 5.64

-- trips with tip in 5-10

SELECT round((count(*)/1155315)*100,2) as per_share from nyc_taxi_part where tip_amount>=10 and tip_amount<15;
-- per_share
-- 1.7

-- trips with tip in 10-15


SELECT round((count(*)/1155315)*100,2) as per_share from nyc_taxi_part where tip_amount>=15 and tip_amount<20;
-- per_share
-- 0.19

-- trips with tip in 15-20

SELECT round((count(*)/1155315)*100,2) as per_share from nyc_taxi_part where tip_amount>=20;
-- per_share
-- 0.09

-- trips with tip >20



-- 3]Which month has a greater average ‘speed’ - November or December?
-- Answer:

-- Speed is calculated as miles per hour.

SELECT mnt as month,avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) as speed from nyc_taxi_part group by mnt order by speed desc;

-- month	speed
-- 12		11.06
-- 11		10.96

-- December month has higher average speed compared to november by small margin.

-- 4] Analyse the average speed of the most happening days of the year, i.e. 31st December (New year’s eve) and 25th December (Christmas) and compare it with the overall average. 
-- Answer:

SELECT avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) as speed from nyc_taxi_part;

-- speed
-- 11.01
-- average speed over all is 11 mph.

SELECT avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) as speed 
from nyc_taxi_part where mnt=12 and day(to_date(tpep_pickup_datetime))=25;

-- speed
-- 15.265

-- speed is more on 25th compared to overall speed.

SELECT avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) as speed 
from nyc_taxi_part where mnt=12 and day(to_date(tpep_pickup_datetime))=31;

-- speed
-- 13.27
-- speed is more on 31st compared to overall speed.


-- Pickup and drop locations can be same if it is round trip.